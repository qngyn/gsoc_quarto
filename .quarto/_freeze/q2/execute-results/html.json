{
  "hash": "b403992097e421f988af8c0c07e2ffae",
  "result": {
    "markdown": "---\ntitle: \"Question 2\"\n---\n\n\nBelow is the function that I wrote in order to convert the text to speech using VoiceRSS API. This function would take 3 inputs: the path of quarto file, speaking language code, and the sample rate (audio format) that both can be viewed [here](https://www.voicerss.org/api/). For the evaluation, I would like to use English as standard language, and `44khz_16bit_stereo` as this is compatible to listen in Apple iOS environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconvert_quarto_to_audio <- function(quarto_file_path, language, sample_rate) {\n  # Load required libraries\n  library(httr)\n  \n  # Read Quarto file\n  quarto_content <- readLines(quarto_file_path)\n  \n  # Concatenate all lines of the Quarto file into a single string\n  quarto_text <- paste(quarto_content, collapse = \"\\n\")\n  quarto_text <- gsub(\"#\", \"\", quarto_text)\n  \n  # Call Text-to-Speech API\n  endpoint <- \"http://api.voicerss.org/\"\n  params <- list(key = api_key, src = quarto_text, hl = language, c = \"MP3\", f = sample_rate)\n  response <- POST(endpoint, body = params)\n  \n  # Check for errors in API response\n  if (http_error(response)) {\n    stop(\"Error:\", content(response, \"text\"))\n  }\n  \n  # Generate output filename based on input filename\n  input_filename <- basename(quarto_file_path)\n  output_filename <- gsub(\"\\\\.qmd$\", \".mp3\", input_filename)  # Replace .qmd extension with .mp3\n  \n  # Save audio file\n  output_path <- file.path(\"~/Documents/GSoC'24\", output_filename)\n  writeBin(content(response, \"raw\"), output_path)\n  cat(\"Audio file saved:\", output_path, \"\\n\")\n}\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}